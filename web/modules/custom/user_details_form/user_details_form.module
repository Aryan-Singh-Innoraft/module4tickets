<?php
use Drupal\Core\Form\FormStateInterface;

/**
 * Implements hook_form_alter().
 * 
 * @param array $form
 *  The form array being altered.
 * @param FormStateInterface $form_state
 *  The current state of the form.
 * @param string $form_id
 *  The ID of the form being altered.
 */
function user_details_form_form_alter(array &$form, FormStateInterface $form_state, $form_id) {
  if ($form_id == "custom_user_details_form") {
    $form['username']['#title'] = t('Enter your username');
    $form['submit']['#value'] = t("Submit details");

    $form['#submit'][] = 'user_details_custom_submit_handler';
  }
}

/**
 * Custom submit handler for sending a mail.
 * 
 * @param array $form
 *   The form structure.
 * @param FormStateInterface $form_state
 *   The current state of the form.
 */
function user_details_custom_submit_handler(array &$form, FormStateInterface $form_state) {
  $username = $form_state->getValue('username');
  $email = $form_state->getValue('usermail');

  $params = [
    'subject' => 'User Details Submitted',
    'message' => "Hello $username, thank you for submitting your details.",
  ];

  \Drupal::service('plugin.manager.mail')->mail(
    'user_details_form',
    'user_form_submission',
    $email,
    \Drupal::currentUser()->getPreferredLangcode(),
    $params
  );
}

/**
 * Implements hook_mail().
 * 
 * @param string $key
 *   The mail key identifying which email to send.
 * @param array &$message
 *   The email message array (subject, body, etc.).
 * @param array $params
 *   Additional parameters passed from the mail call.
 */
function user_details_form_mail($key, &$message, $params) {
  switch ($key) {
    case 'user_form_submission':
      $message['subject'] = $params['subject'];
      $message['body'][] = $params['message'];
      break;
  }
}
